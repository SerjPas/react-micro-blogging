{"version":3,"sources":["components/Error140.jsx","context/TweetContext.jsx","context/UserContext.jsx","components/createTweet.jsx","components/TweetList.jsx","components/Loader.jsx","Pages/TweetPage.jsx","components/NavBarMenu.jsx","components/NavBar.jsx","auth.js","Pages/Login.jsx","Pages/Signup.jsx","components/UploadButton.jsx","components/UserCard.jsx","Pages/UserProfile.jsx","App.js","serviceWorker.js","index.js"],"names":["Error140","className","TweetContext","React","createContext","tweets","handleLoad","addTweet","addTweets","handleErrorMessage","UserContext","currentUser","handleCurrentUser","handleLogout","useStyles","makeStyles","root","marginTop","border","height","color","backgroundColor","button","position","bottom","left","width","borderRadius","alignSelf","CreateTweet","classes","useState","tweetInput","setTweetInput","contex","useContext","userContex","handleOnSubmit","event","a","preventDefault","db","ref","push","id","content","date","Date","toISOString","userName","auth","uid","message","Card","onSubmit","TextField","onKeyDown","keyCode","shiftKey","inputProps","maxLength","style","multiline","rows","autoFocus","name","placeholder","value","onChange","target","required","length","Button","disabled","type","variant","minWidth","TweetList","List","map","item","ListItem","key","paddingLeft","paddingRight","minHeight","CardActions","marginLeft","CardActionArea","src","photoURL","CardContent","Typography","wordWrap","LoadingIndicator","display","justifyContent","alignItems","TweetPage","setTweets","load","setLoad","errorMessage","setErrorMessage","promiseInProgress","usePromiseTracker","useEffect","on","snapshot","forEach","snap","val","error","Provider","bool","tweet","arr","Container","maxWidth","NavBarMenu","anchorEl","setAnchorEl","handleClose","aria-controls","aria-haspopup","onClick","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","textDecoration","to","NavBar","userContext","AppBar","Toolbar","pathname","signup","email","password","createUserWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","signin","signInWithEmailAndPassword","margin","container","Login","setError","setEmail","setPassword","context","user","console","log","autoComplete","fullWidth","SignUp","this","setState","handleSubmit","theme","createStyles","input","UploadButtons","file","files","task","firebase","put","TaskEvent","STATE_CHANGED","getDownloadURL","then","downloadURL","updateProfile","catch","accept","htmlFor","IconButton","aria-label","component","media","large","spacing","card","UserCard","CardMedia","image","title","displayName","UploadButton","gutterBottom","UserProfile","App","setCurrentUser","signOut","onAuthStateChanged","CssBaseline","Grid","xs","lg","exact","path","Signup","window","location","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.188211fd.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Error140 = () => {\n  return (\n    <div className=\"error140\">The tweet can't contain more then 140 chars.</div>\n  );\n}\nexport default Error140;\n","import React from \"react\";\n\nconst TweetContext = React.createContext({\n    tweets: [],\n    handleLoad: () => {},\n    addTweet: () => {},\n    addTweets: () => {},\n    handleErrorMessage: () => {},\n});\n\nexport default TweetContext;","import React from \"react\";\n\nconst UserContext = React.createContext({\n    currentUser: null,\n    handleCurrentUser: () => {},\n    handleLogout: () => {}\n})\nexport default UserContext","import React, {useState, useContext} from \"react\";\nimport {Card, TextField, Button} from \"@material-ui/core\";\nimport Error140 from \"./Error140\";\nimport TweetContext from \"../context/TweetContext\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport {auth, db} from \"../index\";\nimport UserContext from \"../context/UserContext\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        marginTop: 47,\n        border: \"2px solid white\",\n        height: 180,\n        color: \"white\",\n        backgroundColor: \"#16202C\",\n    },\n    button: {\n        position: \"relative\",\n        bottom: -84,\n        left: -10,\n        backgroundColor: \"#007BFF\",\n        width: 68,\n        height: 34,\n        borderRadius: 4,\n        alignSelf: \"flex-end\",\n    },\n}));\n\nconst CreateTweet = () => {\n    const classes = useStyles();\n    const [tweetInput, setTweetInput] = useState(\"\");\n    const contex = useContext(TweetContext);\n    const userContex = useContext(UserContext);\n\n    const handleOnSubmit = async (event) => {\n        if (event) {\n            event.preventDefault();\n        }\n\n        if (tweetInput !== \"\") {\n            try {\n                contex.handleLoad(true)\n                await db.ref(\"tweets\").push({\n                    id: userContex.currentUser.id,\n                    content: tweetInput,\n                    date: new Date().toISOString(),\n                    userName: auth().currentUser.uid,\n                });\n                setTweetInput('');\n            } catch (error) {\n                contex.handleErrorMessage(error.message);\n            }\n        }\n    };\n\n    const onEnterPress = (event) => {\n        if (event.keyCode === 13 && event.shiftKey === false) {\n            event.preventDefault();\n            handleOnSubmit();\n        }\n    };\n\n    return (\n        <Card\n            className={classes.root}\n        >\n            <form className=\"form\" onSubmit={handleOnSubmit}>\n                <TextField\n                    onKeyDown={onEnterPress}\n                    inputProps={{maxLength: 140, style: {color: \"white\"}}}\n                    multiline\n                    style={{width: \"100%\"}}\n                    rows={9}\n                    className=\"tweet-input\"\n                    autoFocus\n                    id=\"tweet\"\n                    name=\"tweetInput\"\n                    placeholder=\"What you have in mind...\"\n                    value={tweetInput}\n                    onChange={(event) => setTweetInput(event.target.value)}\n                    required\n                />\n                {tweetInput.length === 140 && <Error140/>}\n                <Button\n                    className={classes.button}\n                    disabled={tweetInput.length === 140}\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                >\n                    Tweet\n                </Button>\n            </form>\n        </Card>\n    );\n};\nexport default CreateTweet;","import React, {useContext} from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport \"../App.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TweetContext from \"../context/TweetContext\";\nimport UserContext from \"../context/UserContext\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: \"100%\",\n    backgroundColor: \"#343A40\",\n    color: \"white\",\n  },\n});\n\nconst TweetList = () => {\n  const classes = useStyles();\n  const contex = useContext(TweetContext);\n  const userContex = useContext(UserContext);\n\n  return (\n      <List className=\"form-revers\">\n        {contex.tweets.map((item) => (\n            <ListItem key={item.id} style={{ paddingLeft: \"0\", paddingRight: \"0\" }} >\n              <Card className={classes.root} style={{ minHeight: \"100px\" }}>\n                <CardActions>\n                  <span style={{ color: \"#6C757D\" }}>{item.userName}</span>\n                  <span style={{ marginLeft: \"auto\", color: \"#6C757D\" }}>\n                {item.date}\n              </span>\n                </CardActions>\n                <CardActionArea>\n                  <div className=\"user-image-holder\">\n                    <img\n                        src={userContex.currentUser.photoURL}\n                    />\n                    <CardContent className=\"message-bubble\">\n                      <Typography style = {{wordWrap: \"break-word\"}}>{item.content}</Typography>\n                    </CardContent>\n                  </div>\n\n                </CardActionArea>\n              </Card>\n            </ListItem>\n        ))}\n      </List>\n  );\n};\nexport default TweetList;","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nconst LoadingIndicator = () => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\" />\n    </div>\n  );\n};\n\nexport default LoadingIndicator;\n","import React, {useState, useEffect} from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport CreateTweet from \"../components/createTweet\";\nimport TweetList from \"../components/TweetList\";\nimport LoadingIndicator from \"../components/Loader\";\nimport TweetContext from \"../context/TweetContext\";\nimport {usePromiseTracker} from \"react-promise-tracker\";\nimport {db} from \"../index\";\n\nconst TweetPage = () => {\n  const [tweets, setTweets] = useState([]);\n  const [load, setLoad] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const {promiseInProgress} = usePromiseTracker();\n\n  useEffect(() => {\n    try {\n      db.ref(\"tweets\").on(\"value\", snapshot => {\n        let tweets = [];\n        snapshot.forEach((snap) => {\n          tweets.push(snap.val());\n        });\n        setTweets(tweets);\n        setLoad(false)\n      });\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  }, []);\n\n\n  const addTweet = (tweet) => {\n    setTweets([tweet, ...tweets]);\n  };\n\n  const addTweets = (arr) => {\n    setTweets(arr);\n  };\n  const handleErrorMessage = (error) => {\n    setErrorMessage(error);\n  };\n\n  const handleLoad = (bool) => {\n    setLoad(bool);\n  }\n\n  return (\n      <TweetContext.Provider\n          value={{tweets, handleLoad, addTweet, addTweets, handleErrorMessage}}\n      >\n        <div>\n          <Container maxWidth=\"sm\">\n            <CreateTweet/>\n            {promiseInProgress || load ? <LoadingIndicator/> : \"\"}\n            {errorMessage && <h3 className=\"error\">{errorMessage}</h3>}\n            <TweetList/>\n          </Container>\n        </div>\n      </TweetContext.Provider>\n  );\n};\n\nexport default TweetPage;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {Link} from \"react-router-dom\";\n\nconst NavBarMenu = () => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            <Button style={{color: \"white\"}} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                Menu\n            </Button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose}>\n                    <Link style={{textDecoration: \"none\",}} to=\"/tweets\">\n                        Home\n                    </Link>\n                </MenuItem>\n                <MenuItem onClick={handleClose}>\n                    <Link style={{textDecoration: \"none\",}} to=\"/profile\">\n                        Profile\n                    </Link>\n                </MenuItem>\n                <MenuItem onClick={handleClose}>\n                </MenuItem>\n            </Menu>\n        </div>\n    );\n}\nexport default NavBarMenu\n","import React, {useContext} from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport NavBarMenu from \"./NavBarMenu\";\n\nconst NavBar = () => {\n    const userContext = useContext(UserContext)\n\n    return (\n\n        <div>\n            <AppBar\n                style={{\n                    backgroundColor: \"#343A40\",\n                    borderRadius: \"6px\",\n                    alignSelf: \"center\",\n                }}\n                position=\"static\"\n            >\n                <Toolbar>\n                    {userContext.currentUser && <NavBarMenu />}\n                    {userContext.currentUser ?\n                        (<div className=\"logout-login\">\n                            {<ExitToAppIcon onClick={userContext.handleLogout}/>}\n                            {!userContext.currentUser && (<Redirect to={{pathname: '/'}}/>)}\n                        </div>) : (<Link className=\"logout-login\" style={{textDecoration: \"none\", color: \"white\"}} to=\"/login\">\n                            Log in\n                        </Link>)}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default NavBar;\n\n","import {auth} from \"./index\";\n\nexport function signup(email, password) {\n    return auth().createUserWithEmailAndPassword(email, password);\n}\n\nexport function signInWithGoogle() {\n    const provider = new auth.GoogleAuthProvider();\n    return auth().signInWithPopup(provider);\n}\n\nexport function signin(email, password) {\n    return auth().signInWithEmailAndPassword(email, password);\n}\n\nexport function logout() {\n    return auth().signOut();\n\n}","import React, {useContext, useState} from \"react\";\nimport {Link, Redirect} from 'react-router-dom';\nimport {Button, Container} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport {signin, signInWithGoogle} from \"../auth\";\nimport UserContext from \"../context/UserContext\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        marginTop: 52,\n        width: 545,\n        backgroundColor: \"#16202C\",\n        margin: 0,\n    },\n    button: {\n        position: \"relative\",\n        backgroundColor: \"#007BFF\",\n        height: 34,\n        borderRadius: 4,\n        alignSelf: \"flex-start\",\n    },\n    container: {\n        color: \"white\",\n        width: \"76%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n}));\n\n\nconst Login = () => {\n    const classes = useStyles();\n    const [error, setError] = useState(null);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const context = useContext(UserContext);\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        setError('');\n        try {\n            const user = await signin(email, password);\n            console.log(user , \"sign in\")\n            context.handleCurrentUser(user);\n            setEmail('');\n        } catch (error) {\n            setError(error.message);\n            setPassword('');\n        }\n    }\n\n    async function googleSignIn() {\n        try {\n            const user = await signInWithGoogle();\n            context.handleCurrentUser(user);\n\n        } catch (error) {\n            setError(error.message);\n            setPassword('');\n        }\n    }\n\n    return (\n        <Container className={classes.container}>\n            <div className={classes.root}>\n                {context.currentUser ? (<Redirect to={{pathname: '/tweets'}}/>) : (\n                    <form\n                        autoComplete=\"off\"\n                        onSubmit={handleSubmit}\n                    >\n                        <h1>\n                            Login to\n                            <Link to=\"/login\"> MicroBlog</Link>\n                        </h1>\n                        <p>\n                            Fill in the form below to login to your account.\n                        </p>\n                        <div>\n                            <input\n                                className=\"auth-input\"\n                                placeholder=\"Email\"\n                                name=\"email\"\n                                type=\"email\"\n                                onChange={(event => setEmail(event.target.value))}\n                                value={email}\n                            />\n                        </div>\n                        <div>\n                            <input\n                                className=\"auth-input\"\n                                placeholder=\"Password\"\n                                name=\"password\"\n                                onChange={(event => setPassword(event.target.value))}\n                                value={password}\n                                type=\"password\"\n                            />\n                        </div>\n                        <div>\n                            {error && <Typography color=\"secondary\">{error}</Typography>}\n                            <Button\n                                className={classes.button}\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                            >\n                                Submit\n                            </Button>\n                        </div>\n                        <hr/>\n                        <div style={{display: \"flex\"}}>\n                            <Button type=\"button\" fullWidth\n                                    variant=\"contained\"\n                                    onClick={googleSignIn}\n                                    color=\"secondary\">\n                                Sign In with google\n                            </Button>\n                        </div>\n                        <p>\n                            Don't have an account? <Link to=\"/signup\">Sign up</Link>\n                        </p>\n                    </form>\n                )}\n            </div>\n        </Container>\n    );\n}\n\nexport default Login","import React, {useContext, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport {signup, signInWithGoogle} from '../auth';\nimport {Button, Container} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Redirect} from \"react-router-dom\"\nimport UserContext from \"../context/UserContext\";\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        marginTop: 52,\n        width: 545,\n        backgroundColor: \"#16202C\",\n    },\n    button: {\n        position: \"relative\",\n        backgroundColor: \"#007BFF\",\n        height: 34,\n        borderRadius: 4,\n        alignSelf: \"flex-start\",\n    },\n    container: {\n        color: \"white\",\n        width: \"76%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n    },\n}));\n\n\nconst SignUp = () => {\n\n    const classes = useStyles();\n    const [error, setError] = useState(null);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const context = useContext(UserContext)\n\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        setError('');\n        try {\n            const user = await signup(email, password);\n            context.handleCurrentUser(user);\n            setEmail('');\n        } catch (error) {\n            setError(error.message);\n            setPassword('');\n        }\n    }\n\n    async function googleSignIn() {\n        try {\n            const user = await signInWithGoogle();\n            context.handleCurrentUser(user);\n        } catch (error) {\n            this.setState({error: error.message});\n            setPassword('');\n        }\n    }\n\n    return (\n        <Container className={classes.container}>\n            <div className={classes.root}>\n                {context.currentUser ? (<Redirect to={{pathname: '/tweets'}}/>) : (\n                    <form onSubmit={(event => handleSubmit(event))}>\n                        <h1>\n                            Sign Up\n                            <Link to=\"/login\"> MicroBlog</Link>\n                        </h1>\n                        <p>Fill in the form below to create an account.</p>\n                        <div>\n                            <input\n                                className=\"auth-input\"\n                                placeholder=\"Email\" name=\"email\" type=\"email\"\n                                onChange={(event => setEmail(event.target.value))}\n                                value={email} required/>\n                        </div>\n                        <div>\n                            <input\n                                className=\"auth-input\"\n                                placeholder=\"Password\" name=\"password\"\n                                onChange={(event => setPassword(event.target.value))}\n                                value={password} type=\"password\" required/>\n                        </div>\n                        <div>\n                            {error && <Typography color=\"secondary\">{error}</Typography>}\n                            <Button\n                                className={classes.button}\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                            >\n                                Submit\n                            </Button>\n                        </div>\n                        <hr></hr>\n                        <div style={{display: \"flex\"}}>\n                            <Button type=\"button\" fullWidth\n                                    variant=\"contained\"\n                                    onClick={googleSignIn}\n                                    color=\"secondary\">\n                                Sign In with google\n                            </Button>\n                        </div>\n                        <p>Already have an account? <Link to=\"/\">Login</Link></p>\n                    </form>\n                )}\n\n            </div>\n        </Container>\n    )\n}\nexport default SignUp","import React, {useContext, useState} from 'react';\nimport {makeStyles, createStyles} from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport * as firebase from 'firebase';\nimport Typography from \"@material-ui/core/Typography\";\nimport UserContext from \"../context/UserContext\";\nimport {auth} from \"../index\";\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        input: {\n            display: 'none',\n        },\n    }),\n);\n\nconst UploadButtons = () => {\n    const classes = useStyles();\n    const [error, setError] = useState(null);\n\n    const userContext = useContext(UserContext)\n\n    const handleUpload = (event) => {\n        const file = event.target.files[0];\n        const storageRef = firebase.storage().ref('img/' + userContext.currentUser.email);\n        const task = storageRef.put(file);\n        task.on(firebase.storage.TaskEvent.STATE_CHANGED, function (snapshot) {\n        }, function (error) {\n            setError(error.message)\n        }, function () {\n            // Upload completed successfully, we can get the download URL\n            task.snapshot.ref.getDownloadURL().then((downloadURL) => {\n                let user = auth().currentUser;\n                user.updateProfile({\n                    photoURL: downloadURL\n                }).then(() => {\n                    console.log(user, \" edited: \" + downloadURL)\n                    userContext.handleCurrentUser(user);\n\n                }).catch((error) => {\n                    setError(error.message)\n                });\n            });\n        });\n    }\n\n    return (\n        <div className={classes.root}>\n            <input onChange={handleUpload} accept=\"image/*\" className={classes.input} id=\"icon-button-file\"\n                   type=\"file\"/>\n            <label htmlFor=\"icon-button-file\">\n                <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                    <PhotoCamera/>\n                </IconButton>\n            </label>\n            {error && <Typography color=\"secondary\">{error}</Typography>}\n        </div>\n    );\n}\n\nexport default UploadButtons","import React, {useContext} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport UserContext from \"../context/UserContext\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport UploadButtons from \"./UploadButton\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 600,\n        marginTop: 52,\n        width: 545,\n    },\n    media: {\n        minHeight: 250,\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    card: {\n        display: \"flex\",\n    }\n}));\n\nexport default function UserCard() {\n\n    const userContext = useContext(UserContext)\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.card}>\n            <CardActionArea className={classes.root}>\n                <div>\n                    <CardMedia\n                        className={classes.media}\n                        image={userContext.currentUser.photoURL}\n                        title={userContext.currentUser.displayName}\n                    />\n                    <div className=\"upload\">\n                        <UploadButtons/>\n                    </div>\n                </div>\n\n                <CardContent>\n                    <div style={{display: \"flex\"}}>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {userContext.currentUser.displayName}\n                        </Typography>\n                    </div>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        Email: {userContext.currentUser.email}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    );\n}\n","import React from \"react\";\nimport UserCard from \"../components/UserCard\";\nimport Container from \"@material-ui/core/Container\";\n\nconst UserProfile = () => {\n\n  return (\n      <Container style={{width: \"76%\", display: \"flex\", justifyContent: \"center\"}} >\n        <UserCard/>\n      </Container>\n  );\n}\nexport default UserProfile","import React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport './App.css';\nimport TweetPage from './Pages/TweetPage';\nimport NavBar from './components/NavBar';\nimport Container from 'react-bootstrap/Container'\nimport {BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport Login from './Pages/Login'\nimport Signup from './Pages/Signup'\nimport UserContext from './context/UserContext'\nimport {logout} from './auth'\nimport {auth} from \"./index\";\nimport UserProfile from \"./Pages/UserProfile\";\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null)\n  console.log(currentUser);\n\n  const handleCurrentUser = (user) => {\n    setCurrentUser(user)\n  }\n\n  const handleLogout = async () => {\n    await logout()\n        .then(() => {\n          setCurrentUser(null)\n        });\n  }\n\n  useEffect(() => {\n    return auth().onAuthStateChanged((user) => {\n      user ? handleCurrentUser(user) : handleCurrentUser(null);\n    });\n  });\n\n  return (\n      <div>\n        <UserContext.Provider value={{currentUser, handleCurrentUser, handleLogout}}\n        >\n          <Router>\n            <CssBaseline/>\n            <Container>\n              <Grid container style={{justifyContent: \"center\", display: \"flex\"}}>\n                <Grid item xs={12} lg={8}>\n                  <NavBar/>\n                </Grid>\n              </Grid>\n              <Switch>\n                <Route exact path=\"/signup\">\n                  <Signup/>\n                </Route>\n                <Route exact path=\"/login\">\n                  <Login/>\n                </Route>\n                {currentUser ? (<Route path=\"/profile\"><UserProfile/></Route>)\n                    : (<Redirect to={{pathname: '/login'}}/>)}\n\n                {currentUser ? (<Route path=\"/\"><TweetPage/></Route>)\n                    : (<Redirect to={{pathname: '/login'}}/>)}\n              </Switch>\n            </Container>\n          </Router>\n        </UserContext.Provider>\n      </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase';\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC6OyRCTsWh6ZvLUA8lQ2jgEvgw8ci5kno\",\n    authDomain: \"microblogging-project.firebaseapp.com\",\n    databaseURL: \"https://microblogging-project.firebaseio.com\",\n    projectId: \"microblogging-project\",\n    storageBucket: \"microblogging-project.appspot.com\",\n    messagingSenderId: \"45719062868\",\n    appId: \"1:45719062868:web:6ba70f40ada88e4342a0c1\",\n    measurementId: \"G-6KNN7QR1QK\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig)\nfirebase.analytics();\n\nexport const auth = firebase.auth;\nexport const db = firebase.database();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}